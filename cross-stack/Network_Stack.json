{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "VPC: public and private subnets in two availability zones",
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Fn::Sub": "20.0.0.0/16"
                },
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "network-dr-vpc"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "network-dr-vpc"
                    }
                ]
            }
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "SubnetAPublic": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Sub": "20.0.1.0/24"
                },
                "MapPublicIpOnLaunch": true,
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "network-dr-pub-sub-1"
                    },
                    {
                        "Key": "Reach",
                        "Value": "public"
                    }
                ]
            }
        },
        "SubnetAPrivate": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Sub": "20.0.2.0/24"
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "network-dr-pvt-sub-1"
                    },
                    {
                        "Key": "Reach",
                        "Value": "private"
                    }
                ]
            }
        },
        "SubnetBPublic": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Sub": "20.0.3.0/24"
                },
                "MapPublicIpOnLaunch": true,
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "network-dr-pub-sub-2"
                    },
                    {
                        "Key": "Reach",
                        "Value": "public"
                    }
                ]
            }
        },
        "SubnetBPrivate": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        1,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": {
                    "Fn::Sub": "20.0.4.0/24"
                },
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "network-dr-pvt-sub-2"
                    },
                    {
                        "Key": "Reach",
                        "Value": "private"
                    }
                ]
            }
        },
        "RouteTablePublic": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "network-dr-pub-route-1"
                    }
                ]
            }
        },
        "RouteTablePrivate1": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "network-dr-pvt-route-1"
                    }
                ]
            }
        },
        "EIPA": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": {
                    "Ref": "VPC"
                }
            }
        },
        "NATA": {
            "Type": "AWS::EC2::NatGateway",
            "DependsOn": "VPCGatewayAttachment",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIPA",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "SubnetAPublic"
                }
            }
        },
        "RouteTableAssociationAPublic": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetAPublic"
                },
                "RouteTableId": {
                    "Ref": "RouteTablePublic"
                }
            }
        },
        "RouteTableAssociationAPrivate": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetAPrivate"
                },
                "RouteTableId": {
                    "Ref": "RouteTablePrivate1"
                }
            }
        },
        "RouteTableAssociationBPublic": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetBPublic"
                },
                "RouteTableId": {
                    "Ref": "RouteTablePublic"
                }
            }
        },
        "RouteTableAssociationBPrivate": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetBPrivate"
                },
                "RouteTableId": {
                    "Ref": "RouteTablePrivate1"
                }
            }
        },
        "RouteTablePublicInternetRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "VPCGatewayAttachment",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTablePublic"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "RouteTablePrivateInternetRoute1": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTablePrivate1"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATA"
                }
            }
        },
        "NetworkAclPublic": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "network-dr-pub-nacl"
                    }
                ]
            }
        },
        "NetworkAclPrivate": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "network-dr-pvt-nacl"
                    }
                ]
            }
        },
        "SubnetNetworkAclAssociationAPublic": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetAPublic"
                },
                "NetworkAclId": {
                    "Ref": "NetworkAclPublic"
                }
            }
        },
        "SubnetNetworkAclAssociationAPrivate": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetAPrivate"
                },
                "NetworkAclId": {
                    "Ref": "NetworkAclPrivate"
                }
            }
        },
        "SubnetNetworkAclAssociationBPublic": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetBPublic"
                },
                "NetworkAclId": {
                    "Ref": "NetworkAclPublic"
                }
            }
        },
        "SubnetNetworkAclAssociationBPrivate": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SubnetBPrivate"
                },
                "NetworkAclId": {
                    "Ref": "NetworkAclPrivate"
                }
            }
        },
        "NetworkAclEntryInPublicAllowAll": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAclPublic"
                },
                "RuleNumber": 99,
                "Protocol": -1,
                "RuleAction": "allow",
                "Egress": false,
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "NetworkAclEntryOutPublicAllowAll": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAclPublic"
                },
                "RuleNumber": 99,
                "Protocol": -1,
                "RuleAction": "allow",
                "Egress": true,
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "NetworkAclEntryInPrivateAllowVPC": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAclPrivate"
                },
                "RuleNumber": 99,
                "Protocol": -1,
                "RuleAction": "allow",
                "Egress": false,
                "CidrBlock": "0.0.0.0/0"
            }
        },
        "NetworkAclEntryOutPrivateAllowVPC": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "NetworkAclPrivate"
                },
                "RuleNumber": 99,
                "Protocol": -1,
                "RuleAction": "allow",
                "Egress": true,
                "CidrBlock": "0.0.0.0/0"
            }
        }
    },
    "Outputs": {
        "TemplateID": {
            "Description": "Template ID : ",
            "Value": "Network Stack"
        },
        "AZs": {
            "Description": "AZs",
            "Value": 2,
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-AZs"
                }
            }
        },
        "AZA": {
            "Description": "AZ of A",
            "Value": {
                "Fn::Select": [
                    0,
                    {
                        "Fn::GetAZs": ""
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-AZA"
                }
            }
        },
        "AZB": {
            "Description": "AZ of B",
            "Value": {
                "Fn::Select": [
                    1,
                    {
                        "Fn::GetAZs": ""
                    }
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-AZB"
                }
            }
        },
        "VPC": {
            "Description": "VPC",
            "Value": {
                "Ref": "VPC"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "VPC"
                }
            }
        },
        "SubnetsPublic": {
            "Description": "Subnets public.",
            "Value": {
                "Fn::Join": [
                    ",",
                    [
                        {
                            "Ref": "SubnetAPublic"
                        },
                        {
                            "Ref": "SubnetBPublic"
                        }
                    ]
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-SubnetsPublic"
                }
            }
        },
        "SubnetsPrivate": {
            "Description": "Subnets private.",
            "Value": {
                "Fn::Join": [
                    ",",
                    [
                        {
                            "Ref": "SubnetAPrivate"
                        },
                        {
                            "Ref": "SubnetBPrivate"
                        }
                    ]
                ]
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-SubnetsPrivate"
                }
            }
        },
        "RouteTablePrivate1": {
            "Description": "Route table private 1",
            "Value": {
                "Ref": "RouteTablePrivate1"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-RouteTablePrivate1"
                }
            }
        },
        "RouteTablePublic": {
            "Description": "Route table public.",
            "Value": {
                "Ref": "RouteTablePublic"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-RouteTablePublic"
                }
            }
        },
        "SubnetAPublic": {
            "Description": "Subnet A public.",
            "Value": {
                "Ref": "SubnetAPublic"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-SubnetAPublic"
                }
            }
        },
        "SubnetAPrivate": {
            "Description": "Subnet A private.",
            "Value": {
                "Ref": "SubnetAPrivate"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-SubnetAPrivate"
                }
            }
        },
        "SubnetBPublic": {
            "Description": "Subnet B public.",
            "Value": {
                "Ref": "SubnetBPublic"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-SubnetBPublic"
                }
            }
        },
        "SubnetBPrivate": {
            "Description": "Subnet B private.",
            "Value": {
                "Ref": "SubnetBPrivate"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-SubnetBPrivate"
                }
            }
        }
    }
}